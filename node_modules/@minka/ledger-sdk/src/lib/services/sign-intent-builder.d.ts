import { IntentMeta, IntentRecord, IntentSignatureData, JwtConfig, LedgerHash, LedgerIntent, LedgerSignature, LedgerSigningParams } from '@minka/types';
import { IntentResponse } from '../clients/intent-client';
declare type SendSignatureFunction = (signature: LedgerSignature<IntentSignatureData>, authParams: JwtConfig) => Promise<IntentResponse>;
export declare class SignIntentBuilder {
    private recordBuilder;
    private sendSignature;
    private newSignaturesStartIndex;
    protected authParams: JwtConfig;
    constructor(sendSignature: SendSignatureFunction, intent: IntentRecord);
    auth(params: Partial<JwtConfig>): this;
    read(): Promise<import("@minka/types").LedgerRecord<LedgerIntent, IntentMeta>>;
    hash(hash?: LedgerHash): this;
    sign(params: LedgerSigningParams[]): this;
    send(): Promise<IntentResponse>;
}
export {};
