import { LedgerPublic, LedgerRecord, LedgerSignature } from '@minka/types';
import { LedgerSdkError } from '../types/ledger-sdk-error';
declare type ComparableSignature = Partial<LedgerSignature>;
export declare class ProofVerificationClient {
    private ledgerSigner;
    private assertions;
    constructor(signer: LedgerPublic);
    protected assertLength(record: LedgerRecord<any>, min: number, max?: number): void;
    protected assertExpect(record: LedgerRecord<any>, match: ComparableSignature): void;
    protected assert(record: LedgerRecord<any>): void;
    verify(record: LedgerRecord<any>): Promise<void>;
    error(record: LedgerRecord<any>): LedgerSdkError;
    expect(matcher: ComparableSignature | ComparableSignature[]): this;
    ledger(): this;
    length(min: number, max?: number): this;
}
export {};
