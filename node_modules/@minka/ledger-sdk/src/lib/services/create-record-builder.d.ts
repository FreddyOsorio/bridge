import { JwtConfig, LedgerMeta, LedgerRecord } from '@minka/types';
import { BaseRecordResponse } from '../types/record-response';
import { BaseRecordBuilder } from './base-record-builder';
export declare type CreateRecordHandler<T, R, M extends LedgerMeta = LedgerMeta> = (record: LedgerRecord<T, M>, authParams: JwtConfig) => Promise<R>;
export declare class CreateRecordBuilder<T, R extends BaseRecordResponse<T, M>, M extends LedgerMeta = LedgerMeta> extends BaseRecordBuilder<T, M> {
    protected createRecord: CreateRecordHandler<T, R, M>;
    constructor(createRecord: CreateRecordHandler<T, R, M>);
    send(): Promise<R>;
}
