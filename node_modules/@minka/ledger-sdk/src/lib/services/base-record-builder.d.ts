import { PartialDeep } from 'type-fest';
import { JwtConfig, LedgerHash, LedgerMeta, LedgerRecord, LedgerSigningParams } from '@minka/types';
export declare class BaseRecordBuilder<T, M extends LedgerMeta = LedgerMeta> {
    protected authParams: JwtConfig;
    protected record: LedgerRecord<T, M>;
    private pendingAsyncOperations?;
    protected enqueueAsyncOperation(operation: () => Promise<void>): void;
    protected finishAsyncOperations(): Promise<void>;
    init(record: Partial<LedgerRecord<T, M>>): this;
    data(data: PartialDeep<T>): this;
    meta(meta: LedgerMeta): this;
    hash(hash?: LedgerHash): this;
    auth(params: Partial<JwtConfig>): this;
    sign(params: LedgerSigningParams[]): this;
    read(): Promise<LedgerRecord<T, M>>;
}
